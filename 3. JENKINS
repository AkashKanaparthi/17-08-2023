06-09-2023

JENKINS:
its a ci/cd tool.

ci : continous integration : continous build + continous test 
old code with new code
before ci we have time waste and every thing is manual work.
after ci everything is automated.

cd : continous delivery	  : deployment manually to prod env
cd : continous deployment : deployment automatically to prod env

PIPELINE:
STEP BY STEP EXECUTION OF A PARTICULAR PROCESS.
SERIES OF EVENTS INTERLINKED WITH EACHOTHER.

CODE -- > BUILD -- > TEST -- >  DEPLOY

ENV:
DEV	: DEVELOPERS
QA	: TESTERS
UAT	: CLIENT

THE ABOVE ENVS ARE CALLED AS PRE-PROD OR NON-PROD

PROD	: USER
PROD ENV IS ALSO CALLED AS LIVE ENV


JENKINS:
its a free and opensource tool.
its platform independent.
it is built on java-11.
koshuke kawaguchui invented jenkins in sun micro systems 2004.
inital name was hudson -- > paid -- > orcle -- > free 
it consist lot of plugins.
port number for jenkins is 8080.

SETUP: CREATE EC2 WITH ALL TRAFFIC (8080)

#STEP-1: INSTALLING GIT JAVA-1.8.0 MAVEN 
yum install git java-1.8.0-openjdk maven -y

#STEP-2: GETTING THE REPO (jenkins.io --> download -- > redhat)
sudo wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo
sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io-2023.key

#STEP-3: DOWNLOAD JAVA11 AND JENKINS
amazon-linux-extras install java-openjdk11 -y
yum install jenkins -y
update-alternatives --config java

#STEP-4: RESTARTING JENKINS (when we download service it will on stopped state)
systemctl start jenkins.service
systemctl status jenkins.service

copy public ip and paste on browser like this
public-ip:8080
cat /var/lib/jenkins/secrets/initialAdminPassword
install plugins and create user for login.

INTEGRATION OF GIT AND MAVEN WITH JENKINS:
NEW ITEM -- > NAME: NETFLIX JOB -- > FREE STYLE -- > OK 
Source Code Management -- > GIT -- > https://github.com/devopsbyraham/jenkins-java-project.git
Build Steps -- > add setp -- > Execute shell -- > save

================================================================================================================================================
07-09-2023:



PARAMETERS: used to pass input for the jobs
choice: when we have multiple options we can select one

create a ci job -- > Configure -- > This project is parameterized -- > choice -- > name: env choice: dev,test,uat, prod -- > save

string: to pass multiple inputs 
multi line string: to pass input on multiple lines
bool: ture of false
file: to build files


PORT CHANGING:
vim /usr/lib/systemd/system/jenkins.service
67 (8080=8090)
systemctl daemon-reload
systemctl restart jenkins.service
systemctl status jenkins.service


PASSWORDLESS LOGIN:
vim /var/lib/jenkins/config.xml
line 7 (true=false)
systemctl restart jenkins.service
systemctl status jenkins.service


CHANGING BUILD LIMITS:
dashboard -- > manage jenkins -- > nodes -- > built-in node -- > configure -- > number of executors -- > 3 -- > save


HOW TO RESLOVE ISSUE WHEN JENKINS SERVER IS CRASHED: 
when we stop and start server your ip will change and the services inside server also stop.



RESTORING DELETE JOBS:

Dashboard -- > Manage Jenkins -- > Plugins -- > available plugins -- > Job Configuration History -- > install -- > go back to top page

now try to delete a job

HISTORY:
31  vim jenkins.sh
   32  sh jenkins.sh 
   33  cat /var/lib/jenkins/secrets/initialAdminPassword
   34  cd /var/lib/jenkins/workspace/netflix/
   35  ll
   36  ls target/
   37  vim /usr/lib/systemd/system/jenkins.service 
   38  system daemon-reload
   39  systemctl daemon-reload
   40  systemctl restart jenkins.service 
   41  systemctl status jenkins.service 
   42  vim /usr/lib/systemd/system/jenkins.service 
   43  systemctl daemon-reload
   44  systemctl restart jenkins.service 
   45  systemctl status jenkins.service 
   46  vim /var/lib/jenkins/config.xml 
   47  systemctl restart jenkins.service 
   48  systemctl status jenkins.service 
   49  systemctl restart jenkins.service 
   50  systemctl status jenkins.service 
   51  vim /var/lib/jenkins/config.xml 
   52  systemctl restart jenkins.service 
   53  systemctl status jenkins.service 
   54  history
=================================================================

CRONJOB: used to schedule the works on jenkins.
cron synatx is used to work with cron jobs.
cron synatx: * * * * *
each star will have space in b/w
NOTE: use server time (utc)

*	: minutes
*	: hours
*	: date
*	: month
*	: day (0=sun 1=mon ----)

11:05 08-09-2023

5 11 8 9 5
5 11 8 9 5

4:45 pm 09-09-2023

45 16 9 9 6

38 5 8 9 5

CREATE A CI JOB: Build Triggers -- > Build periodically -- > * * * * * -- > save

Limitations:
will not check the code is changed or not.

POLLSCM: it will build when code is changed only.
Note: need to set the time limit.

CREATE A CI JOB: Build Triggers -- > Poll Scm -- > * * * * * -- > save


limitation:
9am -- > 7 am : time waste 

Webhooks: it will trigger the build the moment we commit the code

github -- > repo -- > settings -- > webhooks -- > add webhook -- >
Payload URL: http://13.39.14.187:8080/github-webhook/ -- > Content type: application/json -- > Add webhook

Jenkins Dashboard -- > create ci job -- > Build triggers -- > GitHub hook trigger for  GITScm polling -- > save  


THROTTLE BUILD: to restrict number of builds per interval.
create job -- > Throttle builds -- > Number of build: 3 -- > time period: hours -- > save 

make builds and test them

